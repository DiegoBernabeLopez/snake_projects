# As standard, snakemake workflows execute this snakefile who imports all necesary rules by include command.
# Rule all is executed which causes the workflow to generate all the files under all rule input statement.

import os
configfile: "config.yaml"


#just for testing while developing
dirname=".test"
try:
    os.mkdir(dirname)
    print("Directory " , dirname ,  " Created ") 
except FileExistsError:
    print("Directory " , dirname ,  " already exists")


#transform possible string inputs to array
work = eval('[ config["work"] ]') if type(config['work']) == str else config['work']


#check for standard workflows

expand_flag=True
while expand_flag==True:
    expand_flag=False
    work_=[]
    for i, v in enumerate(work):
        if config['dictionary'].get(v) != None and type(config['dictionary'][v]) == list:
            work_ += config['dictionary'][v]
            expand_flag=True
        elif config['dictionary'].get(v) != None and not type(config['dictionary'][v]) == list:
            for p in list(config['dictionary'][v].keys()):
                work_.append(p)
                config[p]['parameters'].extend(config['dictionary'][v][p])
        else:
            work_.append(v)
                   
    work=work_
    
config["work"]=work

    
    
print("Work to do: ", config['work']) 


#Load required rules
for i in config['work']:
	if i != "" or i!= "none":
		include: "rules/" + i + ".smk"		



SAMPLES=config['in']

rule all:
    input:
        expand("{sample}.{suffix}",sample=SAMPLES,suffix=config['work'][-1])
